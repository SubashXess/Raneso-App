{
    "sourceFile": "linux/CMakeLists.txt",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1700988266041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1700988266041,
            "name": "Commit-0",
            "content": "# Project-level configuration.\r\ncmake_minimum_required(VERSION 3.10)\r\nproject(runner LANGUAGES CXX)\r\n\r\n# The name of the executable created for the application. Change this to change\r\n# the on-disk name of your application.\r\nset(BINARY_NAME \"raneso_app\")\r\n# The unique GTK application identifier for this application. See:\r\n# https://wiki.gnome.org/HowDoI/ChooseApplicationID\r\nset(APPLICATION_ID \"com.raneso.raneso_app\")\r\n\r\n# Explicitly opt in to modern CMake behaviors to avoid warnings with recent\r\n# versions of CMake.\r\ncmake_policy(SET CMP0063 NEW)\r\n\r\n# Load bundled libraries from the lib/ directory relative to the binary.\r\nset(CMAKE_INSTALL_RPATH \"$ORIGIN/lib\")\r\n\r\n# Root filesystem for cross-building.\r\nif(FLUTTER_TARGET_PLATFORM_SYSROOT)\r\n  set(CMAKE_SYSROOT ${FLUTTER_TARGET_PLATFORM_SYSROOT})\r\n  set(CMAKE_FIND_ROOT_PATH ${CMAKE_SYSROOT})\r\n  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\r\n  set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\r\n  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\r\n  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\r\nendif()\r\n\r\n# Define build configuration options.\r\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\r\n  set(CMAKE_BUILD_TYPE \"Debug\" CACHE\r\n    STRING \"Flutter build mode\" FORCE)\r\n  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS\r\n    \"Debug\" \"Profile\" \"Release\")\r\nendif()\r\n\r\n# Compilation settings that should be applied to most targets.\r\n#\r\n# Be cautious about adding new options here, as plugins use this function by\r\n# default. In most cases, you should add new options to specific targets instead\r\n# of modifying this function.\r\nfunction(APPLY_STANDARD_SETTINGS TARGET)\r\n  target_compile_features(${TARGET} PUBLIC cxx_std_14)\r\n  target_compile_options(${TARGET} PRIVATE -Wall -Werror)\r\n  target_compile_options(${TARGET} PRIVATE \"$<$<NOT:$<CONFIG:Debug>>:-O3>\")\r\n  target_compile_definitions(${TARGET} PRIVATE \"$<$<NOT:$<CONFIG:Debug>>:NDEBUG>\")\r\nendfunction()\r\n\r\n# Flutter library and tool build rules.\r\nset(FLUTTER_MANAGED_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/flutter\")\r\nadd_subdirectory(${FLUTTER_MANAGED_DIR})\r\n\r\n# System-level dependencies.\r\nfind_package(PkgConfig REQUIRED)\r\npkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)\r\n\r\nadd_definitions(-DAPPLICATION_ID=\"${APPLICATION_ID}\")\r\n\r\n# Define the application target. To change its name, change BINARY_NAME above,\r\n# not the value here, or `flutter run` will no longer work.\r\n#\r\n# Any new source files that you add to the application should be added here.\r\nadd_executable(${BINARY_NAME}\r\n  \"main.cc\"\r\n  \"my_application.cc\"\r\n  \"${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc\"\r\n)\r\n\r\n# Apply the standard set of build settings. This can be removed for applications\r\n# that need different build settings.\r\napply_standard_settings(${BINARY_NAME})\r\n\r\n# Add dependency libraries. Add any application-specific dependencies here.\r\ntarget_link_libraries(${BINARY_NAME} PRIVATE flutter)\r\ntarget_link_libraries(${BINARY_NAME} PRIVATE PkgConfig::GTK)\r\n\r\n# Run the Flutter tool portions of the build. This must not be removed.\r\nadd_dependencies(${BINARY_NAME} flutter_assemble)\r\n\r\n# Only the install-generated bundle's copy of the executable will launch\r\n# correctly, since the resources must in the right relative locations. To avoid\r\n# people trying to run the unbundled copy, put it in a subdirectory instead of\r\n# the default top-level location.\r\nset_target_properties(${BINARY_NAME}\r\n  PROPERTIES\r\n  RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_BINARY_DIR}/intermediates_do_not_run\"\r\n)\r\n\r\n\r\n# Generated plugin build rules, which manage building the plugins and adding\r\n# them to the application.\r\ninclude(flutter/generated_plugins.cmake)\r\n\r\n\r\n# === Installation ===\r\n# By default, \"installing\" just makes a relocatable bundle in the build\r\n# directory.\r\nset(BUILD_BUNDLE_DIR \"${PROJECT_BINARY_DIR}/bundle\")\r\nif(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\r\n  set(CMAKE_INSTALL_PREFIX \"${BUILD_BUNDLE_DIR}\" CACHE PATH \"...\" FORCE)\r\nendif()\r\n\r\n# Start with a clean build bundle directory every time.\r\ninstall(CODE \"\r\n  file(REMOVE_RECURSE \\\"${BUILD_BUNDLE_DIR}/\\\")\r\n  \" COMPONENT Runtime)\r\n\r\nset(INSTALL_BUNDLE_DATA_DIR \"${CMAKE_INSTALL_PREFIX}/data\")\r\nset(INSTALL_BUNDLE_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\")\r\n\r\ninstall(TARGETS ${BINARY_NAME} RUNTIME DESTINATION \"${CMAKE_INSTALL_PREFIX}\"\r\n  COMPONENT Runtime)\r\n\r\ninstall(FILES \"${FLUTTER_ICU_DATA_FILE}\" DESTINATION \"${INSTALL_BUNDLE_DATA_DIR}\"\r\n  COMPONENT Runtime)\r\n\r\ninstall(FILES \"${FLUTTER_LIBRARY}\" DESTINATION \"${INSTALL_BUNDLE_LIB_DIR}\"\r\n  COMPONENT Runtime)\r\n\r\nforeach(bundled_library ${PLUGIN_BUNDLED_LIBRARIES})\r\n  install(FILES \"${bundled_library}\"\r\n    DESTINATION \"${INSTALL_BUNDLE_LIB_DIR}\"\r\n    COMPONENT Runtime)\r\nendforeach(bundled_library)\r\n\r\n# Fully re-copy the assets directory on each build to avoid having stale files\r\n# from a previous install.\r\nset(FLUTTER_ASSET_DIR_NAME \"flutter_assets\")\r\ninstall(CODE \"\r\n  file(REMOVE_RECURSE \\\"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\\\")\r\n  \" COMPONENT Runtime)\r\ninstall(DIRECTORY \"${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}\"\r\n  DESTINATION \"${INSTALL_BUNDLE_DATA_DIR}\" COMPONENT Runtime)\r\n\r\n# Install the AOT library on non-Debug builds only.\r\nif(NOT CMAKE_BUILD_TYPE MATCHES \"Debug\")\r\n  install(FILES \"${AOT_LIBRARY}\" DESTINATION \"${INSTALL_BUNDLE_LIB_DIR}\"\r\n    COMPONENT Runtime)\r\nendif()\r\n"
        }
    ]
}